{"version":3,"sources":["components/Header.js","pages/Home.js","components/Recipe.js","components/RecipeList.js","components/Search.js","pages/Recipes.js","pages/SingleRecipe.js","pages/Default.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Header","children","title","styleClass","className","defaultProps","Home","exact","activeClassName","to","Component","Recipe","recipe","image","label","url","source","calories","totalTime","style","height","src","alt","href","target","rel","RecipeList","recipes","map","index","key","Search","search","handleChange","handleSubmit","onSubmit","htmlFor","type","name","placeholder","value","onChange","Recipes","useState","setRecipes","setSearch","query","setQuery","useEffect","a","fetch","process","REACT_APP_API_ID","REACT_APP_API_KEY","response","json","data","hits","getRecipes","e","preventDefault","SingleRecipe","props","match","setUrl","loading","setLoading","setImage","ingredients","setIngredients","params","responseData","result","find","item","Number","id","console","log","getData","maxHeight","text","Default","role","aria-label","Navbar","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4423bb80.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = ({ children, title, styleClass }) => {\r\n  return (\r\n    <header>\r\n      <div className='container-fluid'>\r\n        <div className={`row align-items-center ${styleClass}`}>\r\n          <div className='col text-center'>\r\n            <h1 className=' text-light text-uppercase display-4 letter-spacing'>\r\n              {title}\r\n            </h1>\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Default',\r\n  styleClass: 'header-hero',\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <Header title='Explore the delicious world of international recipes.'>\r\n        <NavLink\r\n          exact\r\n          activeClassName='nav-active'\r\n          to='/recipes'\r\n          className='text-uppercase btn btn-danger btn-lg mt-3'\r\n        >\r\n          <FaSearch /> <span className='px-2'> Search Recipes</span>\r\n        </NavLink>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  let { image, label, url, source, calories, totalTime } = recipe;\r\n  return (\r\n    <div className='col-10 mx-auto col-md-6 col-lg-4 my-3'>\r\n      <div className='card' style={{ height: '100%' }}>\r\n        <img\r\n          src={image}\r\n          alt={image}\r\n          style={{ height: '14rem' }}\r\n          className='img-card-top img-thumbnail'\r\n        />\r\n        <div className='card-body text-capitalize'>\r\n          <h5 className='font-weight-bold'>{label}</h5>\r\n          <h6 className='text-primary  text-slanted'>By {source}</h6>\r\n          <span className='d-block text-danger'>Time: {totalTime} min</span>\r\n        </div>\r\n        <div className='card-footer d-flex justify-content-around align-items-center'>\r\n          <Link\r\n            to={`/recipes/${label}/${calories}`}\r\n            className='btn btn-danger text-capitalize'\r\n          >\r\n            GET THE RECIPE\r\n          </Link>\r\n          <a\r\n            href={url}\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            className='btn btn-success mx-2 text-capitalize'\r\n          >\r\n            Recipe Url\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from 'react';\r\nimport Recipe from './Recipe';\r\n\r\nconst RecipeList = ({ recipes }) => {\r\n  return (\r\n    <>\r\n      <div className='container py-5'>\r\n        {/* title */}\r\n        <div className='row'>\r\n          <div className='col-10 mx-auto col-md-6 text-center text-uppercase mb-3'>\r\n            <h1 className='text-capitalize text-danger display-5'>\r\n              Recipe List\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        {/* end of title */}\r\n        <div className='row'>\r\n          {recipes.map((recipe, index) => (\r\n            <Recipe key={index} recipe={recipe.recipe} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeList;\r\n","import React from 'react';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nconst Search = ({ search, handleChange, handleSubmit }) => {\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className='col-10 mx-auto col-md-8 mt-5 text-center'>\r\n          <h1 className='text-slanted text-capitalize'>\r\n            Search Recipes with\r\n            <strong className='text-danger'> myRecipe</strong>\r\n          </h1>\r\n          <form className='mt-4' onSubmit={handleSubmit}>\r\n            <label htmlFor='search' className='text-capitalize'>\r\n              Type for recipes you want\r\n            </label>\r\n            <div className='input-group'>\r\n              <input\r\n                type='text'\r\n                name='search'\r\n                className='form-control'\r\n                placeholder='eg. chicken'\r\n                value={search}\r\n                onChange={handleChange}\r\n              />\r\n              <div className='input-group-append'>\r\n                <button type='submit' className='btn btn-primary'>\r\n                  <FaSearch />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport RecipeList from '../components/RecipeList';\r\nimport Search from '../components/Search';\r\n\r\nconst Recipes = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [query, setQuery] = useState('chicken');\r\n\r\n  useEffect(() => {\r\n    const getRecipes = async () => {\r\n      const response = await fetch(\r\n        `https://api.edamam.com/search?q=${query}&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      setRecipes(data.hits);\r\n    };\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setQuery(search);\r\n  };\r\n  return (\r\n    <>\r\n      <Search\r\n        search={search}\r\n        handleChange={handleChange}\r\n        handleSubmit={handleSubmit}\r\n      />\r\n      <RecipeList recipes={recipes} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SingleRecipe = (props) => {\r\n  const { match } = props;\r\n\r\n  const [url, setUrl] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [image, setImage] = useState();\r\n  const [ingredients, setIngredients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const url = `https://api.edamam.com/search?q=${match.params.name}&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}`;\r\n      try {\r\n        const response = await fetch(url);\r\n        const responseData = await response.json();\r\n        const result = responseData.hits.find((item) => {\r\n          return Number(match.params.id) === Number(item.recipe.calories);\r\n        });\r\n\r\n        // setRecipe(result);\r\n\r\n        setLoading(false);\r\n        setImage(result.recipe.image);\r\n        setIngredients(result.recipe.ingredients);\r\n        setUrl(result.recipe.url);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getData();\r\n  }, [match.params.name, match.params.id]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-10 mx-auto col-md-6 my-3'>\r\n            <h2 className='text-uppercase text-orange text-center'>\r\n              Loading Recipe ...\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className='container py-5'>\r\n      <div className='row'>\r\n        <div className='col-10 mx-auto col-md-6 my-3'>\r\n          <Link to='/recipes' className='btn btn-warning mb-5 text-capitalize'>\r\n            Back to Recipes List\r\n          </Link>\r\n          <img\r\n            src={image}\r\n            alt='recipe'\r\n            className='d-block w-100 img-thumbnail'\r\n            style={{ maxHeight: '30rem' }}\r\n          />\r\n        </div>\r\n\r\n        <div className='col-10 mx-auto col-md-6 my-3'>\r\n          <h6 className='text-warning text-capitalize text-slanted'>\r\n            Provided by Publisher\r\n          </h6>\r\n          <a\r\n            href={url}\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            className='btn btn-primary mt-2 text-capitalize'\r\n          >\r\n            Publisher Webpage\r\n          </a>\r\n          <a\r\n            href={url}\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            className='btn btn-success mt-2 mx-2 text-capitalize'\r\n          >\r\n            Recipe Url\r\n          </a>\r\n          <ul className='list-group mt-4'>\r\n            <h2 className='mt-3 mb-4'>Ingrdients</h2>\r\n            {ingredients.map((item, index) => {\r\n              return (\r\n                <li key={index} className='list-group'>\r\n                  <div className='list-group-item'>{item.text}</div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleRecipe;\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class Default extends Component {\r\n  render() {\r\n    return (\r\n      <Header title='404' styleClass='default-hero'>\r\n        <h2 className='text-uppercase text-light'>\r\n          <span role='img' aria-label='Sorry'>\r\n            😟😟 You are in the wrong place 😔😔\r\n          </span>\r\n        </h2>\r\n        <NavLink to='/' className='text-uppercase btn btn-danger btn-lg mt-3'>\r\n          Return Home\r\n        </NavLink>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className='navbar navbar-expand-sm navbar-light bg-light px-5'>\r\n      <NavLink to='/' className='navbar-brand'>\r\n        <h1 className='font-italic text-slanted font-weight-bold'>\r\n          my<span className='text-danger'>Recipe</span>\r\n        </h1>\r\n      </NavLink>\r\n      <div className='collapse navbar-collapse show ml-sm-5'>\r\n        <ul className='navbar-nav '>\r\n          <li className='navbar-item '>\r\n            <NavLink\r\n              to='/'\r\n              exact\r\n              activeClassName='nav-active'\r\n              className='nav-link'\r\n            >\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li className='navbar-item'>\r\n            <NavLink\r\n              exact\r\n              activeClassName='nav-active'\r\n              to='/recipes'\r\n              className='nav-link'\r\n            >\r\n              Recipes\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Home from './pages/Home';\nimport Recipes from './pages/Recipes';\nimport SingleRecipe from './pages/SingleRecipe';\nimport Default from './pages/Default';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <main>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/recipes' component={Recipes} />\n          <Route path='/recipes/:name/:id' component={SingleRecipe} />\n          <Route component={Default} />\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}